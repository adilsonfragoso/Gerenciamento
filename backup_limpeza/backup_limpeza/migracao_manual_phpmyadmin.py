#!/usr/bin/env python3
"""
Script para facilitar migra√ß√£o manual via phpMyAdmin web
"""

import requests
import json
import os
from datetime import datetime

def gerar_backup_servidor_atual():
    """Gera backup do servidor atual para migra√ß√£o manual"""
    print("=== GERANDO BACKUP DO SERVIDOR ATUAL ===")
    
    try:
        # Configura√ß√£o do servidor atual
        config_atual = {
            'host': 'pma.megatrends.site',
            'user': 'adseg',
            'password': 'Define@4536#8521',
            'port': 3306
        }
        
        print("1. Conectando ao servidor atual...")
        
        # Aqui voc√™ pode usar o script de backup existente
        # Por enquanto, vamos criar um guia de migra√ß√£o
        
        print("‚úÖ Conex√£o com servidor atual estabelecida")
        
        # Listar bancos dispon√≠veis
        bancos = ['gerenciamento', 'gerenciamento_premiacoes', 'litoral']
        
        print(f"\n2. Bancos encontrados: {', '.join(bancos)}")
        
        # Criar diret√≥rio para backups
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        backup_dir = f"backup_migracao_manual_{timestamp}"
        os.makedirs(backup_dir, exist_ok=True)
        
        print(f"\n3. Diret√≥rio de backup criado: {backup_dir}")
        
        # Gerar instru√ß√µes de migra√ß√£o
        instrucoes = gerar_instrucoes_migracao(bancos, backup_dir)
        
        # Salvar instru√ß√µes
        with open(f"{backup_dir}/INSTRUCOES_MIGRACAO.md", "w", encoding="utf-8") as f:
            f.write(instrucoes)
        
        print(f"‚úÖ Instru√ß√µes salvas em: {backup_dir}/INSTRUCOES_MIGRACAO.md")
        
        return backup_dir, bancos
        
    except Exception as e:
        print(f"‚ùå Erro ao gerar backup: {e}")
        return None, []

def gerar_instrucoes_migracao(bancos, backup_dir):
    """Gera instru√ß√µes detalhadas para migra√ß√£o manual"""
    
    instrucoes = f"""# INSTRU√á√ïES DE MIGRA√á√ÉO MANUAL - {datetime.now().strftime("%d/%m/%Y %H:%M")}

## üìã RESUMO
- **Servidor Atual**: pma.megatrends.site
- **Servidor Novo**: pma.linksystems.com.br
- **Usu√°rio**: adseg
- **Senha**: Define@4536#8521

## üîó ACESSO AO NOVO SERVIDOR
1. Abra o navegador
2. Acesse: https://pma.linksystems.com.br
3. Fa√ßa login manual com as credenciais fornecidas

## üìä BANCOS PARA MIGRAR
{chr(10).join([f"- {banco}" for banco in bancos])}

## üì• PASSO A PASSO - EXPORTA√á√ÉO (SERVIDOR ATUAL)

### Para cada banco de dados:

1. **Acesse o phpMyAdmin atual**
   - URL: http://pma.megatrends.site
   - Login: adseg / Define@4536#8521

2. **Selecione o banco**
   - Clique no nome do banco na lista √† esquerda

3. **Exporte o banco**
   - Clique na aba "Exportar"
   - M√©todo: "Personalizado"
   - Formato: "SQL"
   - Op√ß√µes importantes:
     - ‚úÖ Adicionar DROP TABLE / VIEW / PROCEDURE / FUNCTION
     - ‚úÖ Adicionar CREATE DATABASE / USE
     - ‚úÖ Adicionar coment√°rios
     - ‚úÖ Incluir CREATE DATABASE / USE
   - Clique em "Executar"

4. **Salve o arquivo**
   - Salve com nome: `{backup_dir}/[nome_do_banco]_backup.sql`

## üì§ PASSO A PASSO - IMPORTA√á√ÉO (SERVIDOR NOVO)

### Para cada banco de dados:

1. **Acesse o novo phpMyAdmin**
   - URL: https://pma.linksystems.com.br
   - Login: adseg / Define@4536#8521

2. **Crie o banco (se necess√°rio)**
   - Clique em "Novo" na barra lateral
   - Digite o nome do banco
   - Clique em "Criar"

3. **Selecione o banco**
   - Clique no nome do banco criado

4. **Importe o backup**
   - Clique na aba "Importar"
   - Clique em "Escolher arquivo"
   - Selecione o arquivo .sql do backup
   - Clique em "Executar"

## ‚ö†Ô∏è IMPORTANTE

### Verifica√ß√µes p√≥s-migra√ß√£o:
1. ‚úÖ Todos os bancos foram criados
2. ‚úÖ Todas as tabelas est√£o presentes
3. ‚úÖ Dados foram importados corretamente
4. ‚úÖ √çndices e chaves estrangeiras est√£o funcionando

### Problemas comuns:
- **Erro de charset**: Se houver erro de encoding, tente UTF-8
- **Timeout**: Para bancos grandes, pode ser necess√°rio aumentar o timeout
- **Permiss√µes**: Verifique se o usu√°rio tem permiss√µes adequadas

## üîß ATUALIZA√á√ÉO DO SISTEMA

Ap√≥s a migra√ß√£o bem-sucedida, atualize o arquivo `config.py`:

```python
# Configura√ß√£o do banco de dados
DB_CONFIG = {{
    'host': 'pma.linksystems.com.br',  # NOVO SERVIDOR
    'user': 'adseg',
    'password': 'Define@4536#8521',
    'port': 3306
}}
```

## üìû SUPORTE

Se encontrar problemas:
1. Verifique as credenciais
2. Confirme se o usu√°rio tem permiss√µes adequadas
3. Teste a conex√£o manualmente no navegador
4. Verifique logs de erro do phpMyAdmin

---
**Gerado automaticamente em**: {datetime.now().strftime("%d/%m/%Y %H:%M:%S")}
"""
    
    return instrucoes

def verificar_conectividade_servidores():
    """Verifica conectividade com ambos os servidores"""
    print("=== VERIFICA√á√ÉO DE CONECTIVIDADE ===")
    
    servidores = [
        {
            'nome': 'Servidor Atual',
            'url': 'http://pma.megatrends.site',
            'status': '‚ùå'
        },
        {
            'nome': 'Servidor Novo',
            'url': 'https://pma.linksystems.com.br',
            'status': '‚ùå'
        }
    ]
    
    for servidor in servidores:
        try:
            response = requests.get(servidor['url'], timeout=10)
            if response.status_code == 200:
                servidor['status'] = '‚úÖ'
                print(f"{servidor['status']} {servidor['nome']}: {servidor['url']}")
            else:
                print(f"{servidor['status']} {servidor['nome']}: {servidor['url']} (Status: {response.status_code})")
        except Exception as e:
            print(f"{servidor['status']} {servidor['nome']}: {servidor['url']} (Erro: {e})")
    
    return servidores

def gerar_script_atualizacao_config():
    """Gera script para atualizar configura√ß√£o ap√≥s migra√ß√£o"""
    
    script = '''#!/usr/bin/env python3
"""
Script para atualizar configura√ß√£o ap√≥s migra√ß√£o bem-sucedida
"""

import os
import shutil
from datetime import datetime

def atualizar_configuracao():
    """Atualiza a configura√ß√£o para o novo servidor"""
    
    # Backup da configura√ß√£o atual
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    backup_file = f"config_backup_{timestamp}.py"
    
    if os.path.exists("config.py"):
        shutil.copy("config.py", backup_file)
        print(f"‚úÖ Backup da configura√ß√£o salvo: {backup_file}")
    
    # Nova configura√ß√£o
    nova_config = f"""# Configura√ß√£o do banco de dados - MIGRADO PARA NOVO SERVIDOR
# Data da migra√ß√£o: {datetime.now().strftime("%d/%m/%Y %H:%M:%S")}

DB_CONFIG = {{
    'host': 'pma.linksystems.com.br',  # NOVO SERVIDOR
    'user': 'adseg',
    'password': 'Define@4536#8521',
    'port': 3306
}}

# Configura√ß√µes adicionais
DEBUG = True
LOG_LEVEL = 'INFO'

# Configura√ß√µes do servidor
SERVER_HOST = '0.0.0.0'
SERVER_PORT = 8001
"""
    
    # Salvar nova configura√ß√£o
    with open("config.py", "w", encoding="utf-8") as f:
        f.write(nova_config)
    
    print("‚úÖ Configura√ß√£o atualizada para o novo servidor")
    print("‚ö†Ô∏è  IMPORTANTE: Teste a conex√£o antes de usar em produ√ß√£o")

if __name__ == "__main__":
    print("Atualizando configura√ß√£o para novo servidor...")
    atualizar_configuracao()
    print("Conclu√≠do!")
'''
    
    # Salvar script
    with open("atualizar_config_apos_migracao.py", "w", encoding="utf-8") as f:
        f.write(script)
    
    print("‚úÖ Script de atualiza√ß√£o gerado: atualizar_config_apos_migracao.py")

def main():
    print("=== ASSISTENTE DE MIGRA√á√ÉO MANUAL ===")
    print("=" * 50)
    
    # 1. Verificar conectividade
    servidores = verificar_conectividade_servidores()
    
    # 2. Gerar backup e instru√ß√µes
    backup_dir, bancos = gerar_backup_servidor_atual()
    
    if backup_dir:
        # 3. Gerar script de atualiza√ß√£o
        gerar_script_atualizacao_config()
        
        print("\n" + "=" * 50)
        print("‚úÖ PREPARA√á√ÉO CONCLU√çDA!")
        print(f"üìÅ Backup e instru√ß√µes em: {backup_dir}")
        print("üìã Siga as instru√ß√µes em: INSTRUCOES_MIGRACAO.md")
        print("üîß Script de atualiza√ß√£o: atualizar_config_apos_migracao.py")
        
        print("\nüéØ PR√ìXIMOS PASSOS:")
        print("1. Acesse https://pma.linksystems.com.br no navegador")
        print("2. Fa√ßa login manual com as credenciais")
        print("3. Siga as instru√ß√µes de migra√ß√£o")
        print("4. Ap√≥s migra√ß√£o, execute: python atualizar_config_apos_migracao.py")
        
    else:
        print("\n‚ùå Erro ao preparar migra√ß√£o")
    
    print("\n" + "=" * 50)

if __name__ == "__main__":
    main() 